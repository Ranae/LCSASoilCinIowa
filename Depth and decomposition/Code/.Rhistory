geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free")
ggplot(data=filter(ars_cold, town == "Mandan"), aes(x=radn, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~exp, scales = "free")
ggplot(data=filter(ars_cold, town == "Mandan", radn == NA), aes(x=radn, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~exp, scales = "free")
ggplot(data=filter(ars_cold, town == "Mandan", radn == NA), aes(x=radn, y=N2O, color = year))+
geom_jitter(alpha=.3)#+
#facet_wrap(~exp, scales = "free")
ggplot(data=filter(ars_cold, town == "Mandan", radn != NA), aes(x=radn, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~exp, scales = "free")
ggplot(data=filter(ars_cold, town == "Mandan", radn != "NA"), aes(x=radn, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~exp, scales = "free")
ggplot(data=filter(ars_cold, town == "Mandan", radn != "NA"), aes(x=radn, y=N2O, color = year))+
geom_jitter(alpha=.3)#+
#facet_wrap(~exp, scales = "free")
ggplot(data=filter(ars_cold, town == "Mandan", radn != "NA"), aes(x=as.numeric(radn), y=N2O, color = year))+
geom_jitter(alpha=.3)#+
#facet_wrap(~exp, scales = "free")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(lubridate)
ggplot(ars_cold, aes(x=month, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free", nrow=5)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(lubridate)
ars_fluxes<-read_csv("../data/ars_fluxes.csv", skip = 2)
fluxes<-ars_fluxes%>%
select(`Experimental Unit ID`, Date, N2O, Air_Temp, Soil_Temp, Soil_Moisture)%>%
mutate(Date = mdy_hms(Date))%>%
separate(`Experimental Unit ID`, c("state","exp"), sep = 3)
head(fluxes)
ars_weather<-read_csv("../data/ars_weather.csv", skip = 2)
weather<-ars_weather%>%
select(`Site ID`, Date, `Temperate, air, daily, maximum, degrees Celsius`, `Temperate, air, daily, minimum, degrees Celsius`, Precip, `Total_Net_Radn`)%>%
mutate(Date = mdy_hms(Date))%>%
separate(`Site ID`, c("state","exp"), sep = 3)%>%
filter(state != "ORP")
head(weather)
ars<-full_join(weather, fluxes, by=c("state", "Date"))
colnames(ars)<-c("site", "nada", "date", "max_temp", "min_temp", "precip", "radn", "exp", "N2O", "air_temp", "soil_temp", "soil_moisture")
head(ars)
ggplot(ars, (aes(x = state, y = N2O)))+
geom_jitter(alpha = .3)
ggplot(ars_cold, aes(x=month, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free", nrow=5)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(lubridate)
ars_fluxes<-read_csv("../data/ars_fluxes.csv", skip = 2)
fluxes<-ars_fluxes%>%
select(`Experimental Unit ID`, Date, N2O, Air_Temp, Soil_Temp, Soil_Moisture)%>%
mutate(Date = mdy_hms(Date))%>%
separate(`Experimental Unit ID`, c("state","exp"), sep = 3)
head(fluxes)
ars_weather<-read_csv("../data/ars_weather.csv", skip = 2)
weather<-ars_weather%>%
select(`Site ID`, Date, `Temperate, air, daily, maximum, degrees Celsius`, `Temperate, air, daily, minimum, degrees Celsius`, Precip, `Total_Net_Radn`)%>%
mutate(Date = mdy_hms(Date))%>%
separate(`Site ID`, c("state","exp"), sep = 3)%>%
filter(state != "ORP")
head(weather)
ars<-full_join(weather, fluxes, by=c("state", "Date"))
colnames(ars)<-c("site", "nada", "date", "max_temp", "min_temp", "precip", "radn", "exp", "N2O", "air_temp", "soil_temp", "soil_moisture")
head(ars)
ggplot(ars, (aes(x = state, y = N2O)))+
geom_jitter(alpha = .3)
ggplot(ars_cold, aes(x=month, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free", nrow=5)
ggplot(ars_cold, (aes(x = date, y = N2O)))+
geom_point(alpha = .3)+
facet_wrap(~town, scales = "free")
ars_cold<-ars %>% filter(site %in% c("INA", "INT", "INW", "MNM", "MNR", "NDM", "NEM", "NVN", "PAH"))%>%
mutate(town = ifelse((site %in% c("INA", "INT", "INW")), "West_Lafayette",
ifelse((site == "MNM"), "Morris",
ifelse((site == "MNR"), "Roseville",
ifelse((site %in% c("NDM", "NEM", "NVN")), "Mandan",
ifelse((site == "PAH"), "University_Park", "NA"                                                                                           ))))))%>%
mutate(month=month(date, label=TRUE), year = as.factor(year(date)))%>%
filter(N2O < 1500)
ggplot(ars_cold, (aes(x = date, y = max_temp)))+
geom_point(alpha = .2)+
geom_hline(yintercept=0)+
facet_wrap(~town)
ggplot(ars_cold, (aes(x = date, y = N2O)))+
geom_point(alpha = .3)+
facet_wrap(~town, scales = "free")
ggplot(ars_cold, aes(x=month, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free", nrow=5)
ars_spring<-ars_cold%>% filter(month %in% c(Jan:May))
ars_spring<-ars_cold%>% filter(month %in% c("Jan":"May"))
ars_spring<-ars_cold%>% filter(month %in% c("Jan", "Feb", "Mar", "Apr", "May"))
ggplot(filter(ars_cold, month %in% c("Jan", "Feb", "Mar", "Apr", "May") , aes(x=month, y=N2O, color = year)))+
geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free", nrow=5)
ggplot(data = filter(ars_cold, month %in% c("Jan", "Feb", "Mar", "Apr", "May") , aes(x=month, y=N2O, color = year)))+
geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free", nrow=5)
ars_spring<-ars_cold%>% filter(month %in% c("Jan", "Feb", "Mar", "Apr", "May"))
head(ars_spring)
ggplot(data = filter(ars_cold, month %in% c("Jan", "Feb", "Mar", "Apr", "May")) , aes(x=month, y=N2O, color = year))+
geom_jitter(alpha=.3)+
facet_wrap(~town, scales = "free", nrow=5)
ggplot(data = filter(ars_cold, month %in% c("Jan", "Feb", "Mar", "Apr", "May")) , aes(x=month, y=N2O, color = year))+
geom_boxplot()+
facet_wrap(~town, scales = "free", nrow=5)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(lubridate)
ars_fluxes<-read_csv("../data/ars_fluxes.csv", skip = 2)
fluxes<-ars_fluxes%>%
select(`Experimental Unit ID`, Date, N2O, Air_Temp, Soil_Temp, Soil_Moisture)%>%
mutate(Date = mdy_hms(Date))%>%
separate(`Experimental Unit ID`, c("state","exp"), sep = 3)
head(fluxes)
ars_weather<-read_csv("../data/ars_weather.csv", skip = 2)
weather<-ars_weather%>%
select(`Site ID`, Date, `Temperate, air, daily, maximum, degrees Celsius`, `Temperate, air, daily, minimum, degrees Celsius`, Precip, `Total_Net_Radn`)%>%
mutate(Date = mdy_hms(Date))%>%
separate(`Site ID`, c("state","exp"), sep = 3)%>%
filter(state != "ORP")
head(weather)
daymet_mandan<-read_csv("../data/daymet_mandan.csv", skip = 7)
daymet_mandan$town<-"Mandan"
daymet_morris<-read_csv("../data/daymet_morris.csv", skip = 7)
daymet_morris$town<-"Morris"
daymet_roseville<-read_csv("../data/daymet_roseville.csv", skip = 7)
daymet_roseville$town<-"Roseville"
daymet_university_park<-read_csv("../data/daymet_university_park.csv", skip = 7)
daymet_university_park$town<-"University_Park"
daymet_west_lafayette<-read_csv("../data/daymet_west_lafayette.csv", skip = 7)
daymet_west_lafayette$town<-"West_Lafayette"
daymet<-rbind(daymet_mandan, daymet_morris, daymet_roseville, daymet_university_park, daymet_west_lafayette)
daymet$date<-as.Date(strptime(paste(daymet$year, daymet$yday), format="%Y%j"))
colnames(daymet)<-c("year", "yday", "daymet_prcp", "daymet_radn", "daymet_tmax", "daymet_tmin", "town", "date")
head(daymet)
setwd("~/LCSASoilCinIowa/Depth and decomposition/Code")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(lubridate)
datain<-read_csv(../Data/"2017-2-2COBS Root Sample Lab Data.csv", skip=1)
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv", skip=1)
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((site %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv", skip=1)
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
head(roots)
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv", skip=1)
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv", skip=1)
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv", skip=1)
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
head(datain)
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
head(roots)
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
head(roots)
ggplot(roots, aes(x=depth, y = `root weight (g)`))+
geom_point()+
facet_wrap(~trt)
ggplot(roots, aes(x=depth, y = `root weight (g)`, color = plot))+
geom_point()+
facet_wrap(~trt)
ggplot(roots, aes(x=depth, y = `root weight (g)`, color = as.factor(plot)))+
geom_point()+
facet_wrap(~trt)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(lubridate)
this_theme<-theme_bw()+
theme(#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position='none', legend.title=element_blank(),
legend.text = element_text(size=12),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90, vjust=1.2),
axis.text.x = element_text(colour="black", size=18),
axis.text.y = element_text(colour="black", size=18),
strip.text = element_text(colour="black", size=18))
theme_set(this_theme)
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
scale_x_reverse(limits = c(100, -3))+
coord_flip()
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
group_by(trt, plot, depth)%>%
summarise(plot_mean = mean(`root weight (g)`))
head(roots)
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
group_by(trt, depth)%>%
summarise(trt_mean = mean(`root weight (g)`))
head(roots)
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
group_by(trt, depth)%>%
summarise_each(funs(mean(., na.rm = TRUE)))
head(roots)
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse(limits = c(100, -3))+
coord_flip()
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
scale_x_reverse(limits = c(100, -3))+
coord_flip()
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
scale_x_reverse()+
coord_flip()
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (Mg ha" ^ "-1",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (Mg ha" ^ "-1",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
roots <- within(roots, depth <- ordered(depth, levels = rev(sort(unique(depth)))))
ggplot(roots, aes(x=depth, y = `root weight (g)`, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (Mg ha" ^ "-1",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
mutate(Root_g_m2=`root weight(g)`/.002376)%>%
group_by(trt, depth)%>%
summarise_each(funs(mean(., na.rm = TRUE)))
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
mutate(Root_g_m2=`Root weight(g)`/.002376)%>%
group_by(trt, depth)%>%
summarise_each(funs(mean(., na.rm = TRUE)))
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
mutate(Root_g_m2=(`root weight(g)`/.002376))%>%
group_by(trt, depth)%>%
summarise_each(funs(mean(., na.rm = TRUE)))
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))
head(roots)
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
mutate(Root_g_m2 = (`root weight (g)`/.002376))%>%
group_by(trt, depth)%>%
summarise_each(funs(mean(., na.rm = TRUE)))
head(roots)
roots <- within(roots, depth <- ordered(depth, levels = rev(sort(unique(depth)))))
ggplot(roots, aes(x=depth, y = Root_g_m2, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (Mg ha" ^ "-1",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
roots <- within(roots, depth <- ordered(depth, levels = rev(sort(unique(depth)))))
ggplot(roots, aes(x=depth, y = Root_g_m2, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (g m" ^ "-2",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
roots <- within(roots, depth <- ordered(depth, levels = rev(sort(unique(depth)))))
ggplot(roots, aes(x=depth, y = Root_g_m2, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (g m" ^ "-2",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
datain<-read_csv("../Data/2017-2-2COBS Root Sample Lab Data.csv")
roots<-datain%>%
mutate(trt = ifelse((plot %in% c("12", "35", "21", "43")), "maize",
ifelse((plot %in% c("13", "31", "24", "46")), "prairie",
ifelse((plot %in% c("15", "32", "23", "41")), "fertilized_prairie", "nada"))))%>%
mutate(Root_g_m2 = (`root weight (g)`/.00203))%>%
group_by(trt, depth)%>%
summarise_each(funs(mean(., na.rm = TRUE)))
head(roots)
roots <- within(roots, depth <- ordered(depth, levels = rev(sort(unique(depth)))))
ggplot(roots, aes(x=depth, y = Root_g_m2, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (g m" ^ "-2",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
roots <- within(roots, depth <- ordered(depth, levels = rev(sort(unique(depth)))))
ggplot(data=filter(roots, trt == "maize"), aes(x=depth, y = Root_g_m2, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (g m" ^ "-2",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
roots <- within(roots, depth <- ordered(depth, levels = rev(sort(unique(depth)))))
ggplot(data=filter(roots, trt == "maize"), aes(x=depth, y = Root_g_m2, fill=trt)) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = poxconc + poxconcse, ymin=poxconc - poxconcse), position = dodge, width=0.25) +
#scale_x_reverse()+
coord_flip()+
#scale_fill_manual(values = desert, breaks=c("CC", "PF", "P"), labels=c("Maize", "Fertilized Prairie", "Prairie"))+
guides(col = guide_legend(reverse = FALSE))+
labs(y = (expression(paste("Root (g m" ^ "-2",")"))),x = "Depth (cm)")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.65,.35), legend.title=element_blank(),
legend.key.size=unit(.75, "cm"), legend.text = element_text(size=18),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
ars_fluxes<-read_csv("../data/ars_fluxes.csv", skip = 2)
head(ars_fluxes)
ars_fluxes<-read_csv("../data/ars_fluxes.csv", skip = 2)
fluxes<-ars_fluxes%>%
select(`Experimental Unit ID`, Date, N2O, Air_Temp, Soil_Temp, Soil_Moisture)%>%
mutate(Date = mdy_hms(Date))%>%
separate(`Experimental Unit ID`, c("state","exp"), sep = 3)
head(fluxes)
load("C:/Users/rdietzel/Downloads/CleanedFiles.RData")
